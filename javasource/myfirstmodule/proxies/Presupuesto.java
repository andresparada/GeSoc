// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Presupuesto
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject presupuestoMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Presupuesto";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		id_presupuesto("id_presupuesto"),
		detalle("detalle"),
		total("total"),
		docComercial("docComercial");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Presupuesto(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.Presupuesto"));
	}

	protected Presupuesto(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject presupuestoMendixObject)
	{
		if (presupuestoMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.Presupuesto", presupuestoMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.Presupuesto");

		this.presupuestoMendixObject = presupuestoMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Presupuesto.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Presupuesto initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Presupuesto.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.Presupuesto initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Presupuesto(context, mendixObject);
	}

	public static myfirstmodule.proxies.Presupuesto load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Presupuesto.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Presupuesto> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Presupuesto> result = new java.util.ArrayList<myfirstmodule.proxies.Presupuesto>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.Presupuesto" + xpathConstraint))
			result.add(myfirstmodule.proxies.Presupuesto.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of id_presupuesto
	 */
	public final java.lang.Long getid_presupuesto()
	{
		return getid_presupuesto(getContext());
	}

	/**
	 * @param context
	 * @return value of id_presupuesto
	 */
	public final java.lang.Long getid_presupuesto(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.id_presupuesto.toString());
	}

	/**
	 * Set value of id_presupuesto
	 * @param id_presupuesto
	 */
	public final void setid_presupuesto(java.lang.Long id_presupuesto)
	{
		setid_presupuesto(getContext(), id_presupuesto);
	}

	/**
	 * Set value of id_presupuesto
	 * @param context
	 * @param id_presupuesto
	 */
	public final void setid_presupuesto(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long id_presupuesto)
	{
		getMendixObject().setValue(context, MemberNames.id_presupuesto.toString(), id_presupuesto);
	}

	/**
	 * @return value of detalle
	 */
	public final java.lang.String getdetalle()
	{
		return getdetalle(getContext());
	}

	/**
	 * @param context
	 * @return value of detalle
	 */
	public final java.lang.String getdetalle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.detalle.toString());
	}

	/**
	 * Set value of detalle
	 * @param detalle
	 */
	public final void setdetalle(java.lang.String detalle)
	{
		setdetalle(getContext(), detalle);
	}

	/**
	 * Set value of detalle
	 * @param context
	 * @param detalle
	 */
	public final void setdetalle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String detalle)
	{
		getMendixObject().setValue(context, MemberNames.detalle.toString(), detalle);
	}

	/**
	 * @return value of total
	 */
	public final java.math.BigDecimal gettotal()
	{
		return gettotal(getContext());
	}

	/**
	 * @param context
	 * @return value of total
	 */
	public final java.math.BigDecimal gettotal(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.total.toString());
	}

	/**
	 * Set value of total
	 * @param total
	 */
	public final void settotal(java.math.BigDecimal total)
	{
		settotal(getContext(), total);
	}

	/**
	 * Set value of total
	 * @param context
	 * @param total
	 */
	public final void settotal(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal total)
	{
		getMendixObject().setValue(context, MemberNames.total.toString(), total);
	}

	/**
	  * The contents of the binary field will be written to the output stream.
	  * The output stream will be closed at the end.
	  *
	  * @param context
	  * @param outputStream
	  */
	public final void getdocComercial(com.mendix.systemwideinterfaces.core.IContext context, java.io.OutputStream outputStream)
	{
		com.mendix.core.objectmanagement.member.MendixBinary binary = (com.mendix.core.objectmanagement.member.MendixBinary) getMendixObject().getMember(context, MemberNames.docComercial.toString());
		binary.retrieveValue(context, outputStream);
	}

	/**
	  * Stores the bytes from the given InputStream.
	  *
	  * Please note that the input stream will be immediately sent to the data store,
	  * whether you commit the Mendix object or not.
	  *
	  * @param context
	  * @param inputStream
	  * @param length the number of bytes in the stream
	  */
	public final void setdocComercial(com.mendix.systemwideinterfaces.core.IContext context, java.io.InputStream inputStream, long length)
	{
		if (getMendixObject().getState() == com.mendix.systemwideinterfaces.core.IMendixObject.ObjectState.INSTANTIATED)
			try { commit(); } catch (com.mendix.core.CoreException ex) { }
		com.mendix.core.objectmanagement.member.MendixBinary binary = (com.mendix.core.objectmanagement.member.MendixBinary) getMendixObject().getMember(context, MemberNames.docComercial.toString());
		binary.storeValue(context, inputStream, length);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return presupuestoMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Presupuesto that = (myfirstmodule.proxies.Presupuesto) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.Presupuesto";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
